{
  "author": {
    "name": "Adam Quaile",
    "email": "adam@adamquaile.com",
    "url": "http://adamquaile.com"
  },
  "name": "session-manager",
  "description": "Manage sessions for http.ServerRequest using various storage engines",
  "version": "0.1.0",
  "homepage": "https://github.com/adamquaile/session-manager",
  "repository": {
    "type": "git",
    "url": "git://github.com/adamquaile/session-manager.git"
  },
  "main": "session-manager.js",
  "engines": {
    "node": "~0.6.6"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "# Session Handling for NodeJS' HTTP Server\n\nsession-manager provides a session management layer around node's built in http server using cookies. \n\n## Usage example\n\nThis example builds on Node's example web server, and responds with an incrementing count, per user.\n\n```javascript\nvar http = require('http');\nvar sessionManager = require('./session-manager.js');\n\n// Best to use one shared session manager across requests\nvar sessionManager = sessionManager.create({engine: 'memory'});\n\n// Usage with Node's HTTP Server\nhttp.createServer(function (req, res) {\n\n    if (req.url == '/') {\n        // Load session for this user\n        var session = sessionManager.start(req, res);\n        session.set('count', (session.get('count') || 0) + 1);\n    }\n    \n    // Display count\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    res.end((session ? session.get('count') : '') + '\\n');\n    \n}).listen(1337, \"127.0.0.1\");\nconsole.log('Server running at http://127.0.0.1:1337/');\n```\n\n## Storage engines. \n\nIt supports various (and extensible) data storage engines. Currently included ones are:\n\n - file (stores data on disk)\n - memory (keeps data in array, useful for development, as restarting node will reset values)\n\n### Storing session data another way (creating new storage engine)\n\nIt is simple to create a new storage engine, e.g. redis by creating an object with two function keys, `set(session_id, key, val)` and `get(session_id, key)`. \nThe simplest example to base this on is the memory engine (./engines/memory.js).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/adamquaile/session-manager/issues"
  },
  "_id": "session-manager@0.1.0",
  "dist": {
    "shasum": "202228848a290b3f855eb98b66ad302de7e34fc7"
  },
  "_from": "session-manager@0.1.0",
  "_resolved": "https://registry.npmjs.org/session-manager/-/session-manager-0.1.0.tgz"
}
